        "required": ["user_id", "role", "permissions", "joined_at"]
      },
      "DownloadLog": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["download-log"]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "file_id": {
                "type": "string",
                "format": "uuid"
              },
              "user_id": {
                "type": "string",
                "format": "uuid",
                "nullable": true,
                "description": "User who downloaded (null for anonymous/guest downloads)"
              },
              "workspace_id": {
                "type": "string",
                "format": "uuid"
              },
              "download_timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "client_ip": {
                "type": "string",
                "description": "Client IP address"
              },
              "user_agent": {
                "type": "string",
                "description": "User agent string"
              },
              "download_method": {
                "type": "string",
                "enum": ["direct", "shared-link", "guest-link", "api"]
              },
              "shared_link_id": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "guest_link_id": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "referrer": {
                "type": "string",
                "nullable": true,
                "description": "HTTP referrer"
              },
              "file_size": {
                "type": "integer",
                "description": "Size of downloaded file in bytes"
              },
              "filename": {
                "type": "string",
                "description": "Name of downloaded file"
              },
              "file_path": {
                "type": "string",
                "description": "Path of downloaded file within workspace"
              }
            },
            "required": ["file_id", "workspace_id", "download_timestamp", "client_ip", "user_agent", "download_method", "file_size", "filename", "file_path"]
          }
        },
        "required": ["type", "id", "attributes"]
      },
      "Store": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["store"]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "storage_type": {
                "type": "string",
                "enum": ["filestore", "s3store", "gcsstore", "azurestore"]
              },
              "configuration": {
                "type": "object",
                "description": "Storage-specific configuration",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/FilestoreConfig"
                  },
                  {
                    "$ref": "#/components/schemas/S3StoreConfig"
                  },
                  {
                    "$ref": "#/components/schemas/GCSStoreConfig"
                  },
                  {
                    "$ref": "#/components/schemas/AzureStoreConfig"
                  }
                ]
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "checksum": {
                    "type": "string",
                    "description": "File checksum for integrity verification"
                  },
                  "size": {
                    "type": "integer",
                    "description": "File size in bytes"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "last_verified": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "tags": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Custom metadata tags"
                  }
                },
                "required": ["checksum", "size", "created_at", "updated_at"]
              },
              "status": {
                "type": "string",
                "enum": ["active", "migrating", "error", "deleted"],
                "default": "active"
              },
              "access_count": {
                "type": "integer",
                "description": "Number of times this store has been accessed"
              },
              "last_accessed": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            },
            "required": ["storage_type", "configuration", "metadata", "status", "access_count"]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "file": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["file"]
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "required": ["data"]
              }
            }
          }
        },
        "required": ["type", "id", "attributes"]
      },
      "FilestoreConfig": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Absolute file path where upload data is stored"
          },
          "info_path": {
            "type": "string",
            "description": "Path to associated info file"
          },
          "permissions": {
            "type": "string",
            "description": "File permissions (e.g., '0644')"
          },
          "directory": {
            "type": "string",
            "description": "Base directory for file storage"
          }
        },
        "required": ["path"],
        "additionalProperties": false
      },
      "S3StoreConfig": {
        "type": "object",
        "properties": {
          "bucket": {
            "type": "string",
            "description": "S3 bucket name"
          },
          "key": {
            "type": "string",
            "description": "Object key/path within bucket"
          },
          "region": {
            "type": "string",
            "description": "AWS region"
          },
          "storage_class": {
            "type": "string",
            "enum": ["STANDARD", "REDUCED_REDUNDANCY", "STANDARD_IA", "ONEZONE_IA", "INTELLIGENT_TIERING", "GLACIER", "DEEP_ARCHIVE"],
            "default": "STANDARD"
          },
          "server_side_encryption": {
            "type": "string",
            "enum": ["AES256", "aws:kms"],
            "nullable": true
          },
          "kms_key_id": {
            "type": "string",
            "nullable": true,
            "description": "KMS key ID for encryption"
          }
        },
        "required": ["bucket", "key"],
        "additionalProperties": false
      },
      "GCSStoreConfig": {
        "type": "object",
        "properties": {
          "bucket": {
            "type": "string",
            "description": "GCS bucket name"
          },
          "object": {
            "type": "string",
            "description": "Object name/path within bucket"
          },
          "project_id": {
            "type": "string",
            "description": "Google Cloud project ID"
          },
          "storage_class": {
            "type": "string",
            "enum": ["STANDARD", "NEARLINE", "COLDLINE", "ARCHIVE"],
            "default": "STANDARD"
          },
          "content_encoding": {
            "type": "string",
            "nullable": true
          }
        },
        "required": ["bucket", "object"],
        "additionalProperties": false
      },
      "AzureStoreConfig": {
        "type": "object",
        "properties": {
          "account_name": {
            "type": "string",
            "description": "Azure storage account name"
          },
          "container": {
            "type": "string",
            "description": "Container name"
          },
          "blob_name": {
            "type": "string",
            "description": "Blob name/path within container"
          },
          "access_tier": {
            "type": "string",
            "enum": ["Hot", "Cool", "Archive"],
            "default": "Hot"
          },
          "blob_type": {
            "type": "string",
            "enum": ["BlockBlob", "PageBlob", "AppendBlob"],
            "default": "BlockBlob"
          }
        },
        "required": ["account_name", "container", "blob_name"],
        "additionalProperties": false
      }
      },
      "GuestLink": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["guest-link"]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "Human-readable label for the guest link"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "description": "When the guest link was created"
              },
              "url_expires": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "When the upload URL expires (null for never)"
              },
              "max_file_lifetime": {
                "type": "integer",
                "nullable": true,
                "description": "Maximum lifetime for uploaded files in seconds"
              },
              "max_file_bytes": {
                "type": "integer",
                "description": "Maximum file size in bytes"
              },
              "max_file_uploads": {
                "type": "integer",
                "nullable": true,
                "description": "Maximum number of file uploads (null for unlimited)"
              },
              "is_disabled": {
                "type": "boolean",
                "default": false,
                "description": "Whether the guest link is disabled"
              },
              "is_encrypted": {
                "type": "boolean",
                "default": false,
                "description": "Whether uploaded files should be encrypted"
              },
              "files_uploaded": {
                "type": "integer",
                "description": "Number of files uploaded via this link"
              },
              "hash": {
                "type": "string",
                "description": "Unique hash for the guest link URL"
              },
              "recipient": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["user_id", "email"]
                  },
                  "value": {
                    "type": "string",
                    "description": "User ID (UUID) or email address"
                  }
                },
                "required": ["type", "value"],
                "description": "Intended recipient of the guest link"
              },
              "workspace_id": {
                "type": "string",
                "format": "uuid",
                "description": "Target workspace for uploads"
              },
              "upload_path": {
                "type": "string",
                "description": "Target directory path for uploads within workspace"
              },
              "created_by": {
                "type": "string",
                "format": "uuid",
                "description": "User who created this guest link"
              },
              "status": {
                "type": "string",
                "enum": ["active", "expired", "disabled", "limit-reached"],
                "description": "Current status of the guest link"
              },
              "last_used": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "When the guest link was last used for upload"
              },
              "total_bytes_uploaded": {
                "type": "integer",
                "description": "Total bytes uploaded via this link"
              }
            },
            "required": ["label", "created", "max_file_bytes", "is_disabled", "is_encrypted", "files_uploaded", "hash", "recipient", "workspace_id", "upload_path", "created_by", "status", "total_bytes_uploaded"]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "workspace": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["workspace"]
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "required": ["data"]
              },
              "store": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["store"]
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "required": ["data"],
                "description": "Storage backend where file content is stored"
              }
            }
          }
        },
        "required": ["type", "id", "attributes"]
      },
      "GuestUpload": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["guest-upload"]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "guest_link_id": {
                "type": "string",
                "format": "uuid"
              },
              "file_id": {
                "type": "string",
                "format": "uuid",
                "description": "ID of the uploaded file"
              },
              "filename": {
                "type": "string"
              },
              "file_path": {
                "type": "string",
                "description": "Path where file was stored in workspace"
              },
              "file_size": {
                "type": "integer",
                "description": "Size of uploaded file in bytes"
              },
              "mime_type": {
                "type": "string"
              },
              "uploaded_at": {
                "type": "string",
                "format": "date-time"
              },
              "uploaded_by_email": {
                "type": "string",
                "format": "email",
                "nullable": true,
                "description": "Email of person who uploaded (if provided)"
              },
              "client_ip": {
                "type": "string",
                "description": "IP address of uploader"
              },
              "user_agent": {
                "type": "string",
                "description": "User agent of uploader"
              },
              "is_encrypted": {
                "type": "boolean",
                "description": "Whether the uploaded file was encrypted"
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "When the uploaded file will be automatically deleted"
              },
              "status": {
                "type": "string",
                "enum": ["active", "expired", "deleted"],
                "default": "active"
              }
            },
            "required": ["guest_link_id", "file_id", "filename", "file_path", "file_size", "mime_type", "uploaded_at", "client_ip", "user_agent", "is_encrypted", "status"]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "guest_link": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["guest-link"]
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "required": ["data"]
              },
              "file": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["file"]
                      },
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "required": ["data"]
              }
            }
          }
        },
        "required": ["type", "id", "attributes"]
      },
      "DownloadLog": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["download-log"]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "file_id": {
                "type": "string",
                "format": "uuid"
              },
              "user_id": {
                "type": "string",
                "format": "uuid",
                "nullable": true,
                "description": "User who downloaded (null for anonymous/guest downloads)"
              },
              "workspace_id": {
                "type": "string",
                "format": "uuid"
              },
              "download_timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "client_ip": {
                "type": "string",
                "description": "Client IP address"
              },
              "user_agent": {
                "type": "string",
                "description": "User agent string"
              },
              "download_method": {
                "type": "string",
                "enum": ["direct", "shared-link", "guest-link", "api"]
              },
              "shared_link_id":        },
        "required": ["type", "attributes"]
      },
      "EphemeralSettings": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["ephemeral-settings"]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "target_type": {
                "type": "string",
                "enum": ["workspace", "file", "directory"]
              },
              "target_id": {
                "type": "string",
                "description": "ID or path of the target item"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "expires_at": {
                "type": "string",
                "format": "date-time"
              },
              "lifetime_duration": {
                "type": "integer",
                "description": "Original lifetime in seconds"
              },
              "time_remaining": {
                "type": "integer",
                "description": "Seconds until expiration"
              },
              "auto_extend": {
                "type": "boolean"
              },
              "extend_by": {
                "type": "integer",
                "nullable": true
              },
              "extensions_used": {
                "type": "integer",
                "default": 0
              },
              "max_extensions": {
                "type": "integer",
                "nullable": true
              },
              "warning_thresholds": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "warnings_sent": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "threshold": {
                      "type": "integer"
                    },
                    "sent_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              },
              "purge_policy": {
                "type": "string",
                "enum": ["immediate", "soft-delete", "archive"]
              },
              "archive_location": {
                "type": "string",
                "nullable": true
              },
              "notify_users": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "inheritance_policy": {
                "type": "string",
                "enum": ["inherit", "override", "shorter-wins"]
              },
              "created_by": {
                "type": "string",
                "format": "uuid"
              },
              "last_activity": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "Last activity timestamp (for auto-extend)"
              },
              "status": {
                "type": "string",
                "enum": ["active", "warning", "expired", "purged"],
                "default": "active"
              }
            },
            "required": ["target_type", "target_id", "created_at", "expires_at", "lifetime_duration", "time_remaining", "purge_policy", "created_by", "status"]
          }
        },
        "required": ["type", "id", "attributes"]
      },
      "EphemeralItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["ephemeral-item"]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "item_type": {
                "type": "string",
                "enum": ["workspace", "file", "directory"]
              },
              "item_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string",
                "nullable": true
              },
              "size": {
                "type": "integer",
                "description": "Size in bytes"
              },
              "expires_at": {
                "type": "string",
                "format": "date-time"
              },
              "time_remaining": {
                "type": "integer"
              },
              "status": {
                "type": "string",
                "enum": ["active", "warning", "expired"]
              },
              "workspace_id": {
                "type": "string",
                "format": "uuid",
                "nullable": true
              },
              "owner": {
                "type": "string",
                "format": "uuid"
              },
              "purge_policy": {
                "type": "string",
                "enum": ["immediate", "soft-delete", "archive"]
              }
            },
            "required": ["item_type", "item_id", "name", "size", "expires_at", "time_remaining", "status", "owner", "purge_policy"]
          }
        },
        "required": ["type", "id", "attributes"]
      },
      "WorkspaceAcl": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["workspace-acl"]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "workspace_id": {
                "type": "string",
                "format": "uuid"
              },
              "default_permissions": {
                "$ref": "#/components/schemas/PermissionSet"
              },
              "roles": {
                "type": "object",
                "properties": {
                  "owner": {
                    "$ref": "#/components/schemas/PermissionSet"
                  },
                  "admin": {
                    "$ref": "#/components/schemas/PermissionSet"
                  },
                  "editor": {
                    "$ref": "#/components/schemas/PermissionSet"
                  },
                  "viewer": {
                    "$ref": "#/components/schemas/PermissionSet"
                  }
                }
              },
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WorkspaceMemberInfo"
                }
              },
              "inheritance_policy": {
                "type": "string",
                "enum": ["inherit", "override", "merge"],
                "default": "inherit"
              },
              "access_policy": {
                "type": "string",
                "enum": ["open", "invite-only", "private"],
                "default": "invite-only"
              }
            },
            "required": ["workspace_id", "default_permissions", "roles", "members"]
          }
        },
        "required": ["type", "id", "attributes"]
      },
      "WorkspaceMember": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["workspace-member"]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "user_id": {
                "type": "string",
                "format": "uuid"
              },
              "workspace_id": {
                "type": "string",
                "format": "uuid"
              },
              "role": {
                "type": "string",
                "enum": ["owner", "admin", "editor", "viewer", "custom"]
              },
              "custom_permissions": {
                "$ref": "#/components/schemas/PermissionSet",
                "nullable": true
              },
              "joined_at": {
                "type": "string",
                "format": "date-time"
              },
              "expires_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "added_by": {
                "type": "string",
                "format": "uuid"
              },
              "status": {
                "type": "string",
                "enum": ["active", "inactive", "expired"]
              }
            },
            "required": ["user_id", "workspace_id", "role", "joined_at", "added_by", "status"]
          }
        },
        "required": ["type", "id", "attributes"]
      },
      "WorkspaceMemberInfo": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string"
          },
          "permissions": {
            "$ref": "#/components/schemas/PermissionSet"
          },
          "joined_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["user_id", "role", "permissions", "joined_at"]
      },        },
        "required": ["type", "attributes"]
      },
      "PermissionSet": {
        "type": "object",
        "properties": {
          "read": {
            "type": "boolean",
            "default": true,
            "description": "View file content and metadata"
          },
          "write": {
            "type": "boolean",
            "default": false,
            "description": "Modify file content"
          },
          "delete": {
            "type": "boolean",
            "default": false,
            "description": "Delete files and directories"
          },
          "execute": {
            "type": "boolean",
            "default": false,
            "description": "Execute code blocks and scripts"
          },
          "share": {
            "type": "boolean",
            "default": false,
            "description": "Create shared links"
          },
          "admin": {
            "type": "boolean",
            "default": false,
            "description": "Manage workspace settings and permissions"
          },
          "create": {
            "type": "boolean",
            "default": false,
            "description": "Create new files and directories"
          },
          "move": {
            "type": "boolean",
            "default": false,
            "description": "Move/rename files and directories"
          },
          "version_history": {
            "type": "boolean",
            "default": true,
            "description": "Access file version history"
          },
          "comment": {
            "type": "boolean",
            "default": true,
            "description": "Add comments and annotations"
          }
        }
      },
      "GlobalPermissionSet": {
        "type": "object",
        "properties": {
          "create_workspace": {
            "type": "boolean",
            "default": true
          },
          "join_workspace": {
            "type": "boolean",
            "default": true
          },
          "create_team": {
            "type": "boolean",
            "default": true
          },
          "manage_users": {
            "type": "boolean",
            "default": false
          },
          "system_admin": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "SpecificPermission": {
        "type": "object",
        "properties": {
          "subject_type": {
            "type": "string",
            "enum": ["user", "role", "team"]
          },
          "subject_id": {
            "type": "string",
            "format": "uuid"
          },
          "permissions": {
            "$ref": "#/components/schemas/PermissionSet"
          },
          "granted_by": {
            "type": "string",
            "format": "uuid",
            "description": "User who granted these permissions"
          },
          "granted_at": {
            "type": "string",
            "format": "date-time"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": ["subject_type", "subject_id", "permissions", "granted_by", "granted_at"]
      },
      "WorkspaceAcl": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["workspace-acl"]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "workspace_id": {
                "type": "string",
                "format": "uuid"
              },
              "default_permissions": {
                "$ref": "#/components/schemas/PermissionSet"
              },
              "roles": {
                "type": "object",
                "properties": {
                  "owner": {
                    "$ref": "#/components/schemas/PermissionSet"
                  },
                  "admin": {
                    "$ref": "#/components/schemas/PermissionSet"
                  },
                  "editor": {
                    "$ref": "#/components/schemas/PermissionSet"
                  },
                  "viewer": {
                    "$ref": "#/components/schemas/PermissionSet"
                  }
                }
              },
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WorkspaceMemberInfo"
                }
              },
              "inheritance_policy": {
                "type": "string",
                "enum": ["inherit", "override", "merge"],
                "default": "inherit"
              },
              "access_policy": {
                "type": "string",
                "enum": ["open", "invite-only", "private"],
                "default": "invite-only"
              }
            },
            "required": ["workspace_id", "default_permissions", "roles", "members"]
          }
        },
        "require      "Team": {
        "description": "Team details",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/Team"
            }
          }
        }
      },
      "TeamList": {
        "description": "List of teams",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "required": ["data"]
            }
          }
        }
      },      "MarkdownParseResult": {
        "description": "Markdown parsing result",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["markdown-parse-result"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "file_path": {
                          "type": "string"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "frontmatter": {
                              "type": "object"
                            }
                          }
                        },
                        "structure": {
                          "type": "object",
                          "properties": {
                            "headings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "integer"
                                  },
                                  "text": {
                                    "type": "string"
                                  },
                                  "line": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "links": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "text": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "line": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "code_blocks": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CodeBlock"
                          }
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "total_lines": {
                              "type": "integer"
                            },
                            "code_blocks_count": {
                              "type": "integer"
                            },
                            "executable_blocks": {
                              "type": "integer"
                            },
                            "languages": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "required": ["file_path", "code_blocks"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "SharedLinkList": {
        "description": "List of shared links",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SharedLink"
                  }
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "total_active": {
                      "type": "integer"
                    },
                    "total_expired": {
                      "type": "integer"
                    }
                  }
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "SharedLink": {
        "description": "Shared link details",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/SharedLink"
            }
          }
        }
      },
      "SharedLinkAnalytics": {
        "description": "Shared link access analytics",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["shared-link-analytics"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "total_views": {
                          "type": "integer"
                        },
                        "total_downloads": {
                          "type": "integer"
                        },
                        "unique_visitors": {
                          "type": "integer"
                        },
                        "views_by_day": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date"
                              },
                              "views": {
                                "type": "integer"
                              },
                              "downloads": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "referrers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "domain": {
                                "type": "string"
                              },
                              "count": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "geographic_data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "country": {
                                "type": "string"
                              },
                              "count": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      },
                      "required": ["total_views", "total_downloads", "unique_visitors"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "SharedFileAccess": {
        "description": "Shared file content and metadata",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["shared-file"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "filename": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string",
                          "description": "File content (base64 encoded for binary files)"
                        },
                        "mime_type": {
                          "type": "string"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": ["utf8", "base64"]
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "download": {
                              "type": "boolean"
                            },
                            "preview": {
                              "type": "boolean"
                            },
                            "execute": {
                              "type": "boolean"
                            }
                          }
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "shared_by": {
                              "type": "string"
                            },
                            "shared_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "expires_at": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "download_count": {
                              "type": "integer"
                            },
                            "max_downloads": {
                              "type": "integer",
                              "nullable": true
                            }
                          }
                        }
                      },
                      "required": ["filename", "content", "mime_type", "size", "encoding", "permissions"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "SharedLinkInfo": {
        "description": "Public shared link metadata",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["shared-link-info"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "filename": {
                          "type": "string"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "mime_type": {
                          "type": "string"
                        },
                        "protection_type": {
                          "type": "string",
                          "enum": ["public", "password", "passkey"]
                        },
                        "requires_auth": {
                          "type": "boolean"
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "shared_by": {
                          "type": "string"
                        },
                        "shared_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": ["name", "filename", "protection_type", "requires_auth"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "SharedLinkUnauthorized": {
        "description": "Shared link access denied",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": ["401"]
                      },
                      "title": {
                        "type": "string",
                        "enum": ["Unauthorized Access"]
                      },
                      "detail": {
                        "type": "string"
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                      "CursorStateList": {
        "description": "List of cursor states",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CursorState"
                  }
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileHistoryList": {
        "description": "File version history",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileHistoryEntry"
                  }
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "file_path": {
                      "type": "string"
                    },
                    "total_versions": {
                      "type": "integer"
                    }
                  }
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileVersion": {
        "description": "Specific file version content",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["file-version"]
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string"
                        },
                        "version_id": {
                          "type": "string"
                        },
                        "commit_hash": {
                          "type": "string"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "mime_type": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": ["path", "content", "version_id"]
                    }
                  },
                  "required": ["type", "id", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileDiff": {
        "description": "File difference between versions",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["file-diff"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "file_path": {
                          "type": "string"
                        },
                        "from_version": {
                          "type": "string"
                        },
                        "to_version": {
                          "type": "string"
                        },
                        "format": {
                          "type": "string",
                          "enum": ["unified", "side-by-side", "json"]
                        },
                        "diff_content": {
                          "type": "string",
                          "description": "Diff in requested format"
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "additions": {
                              "type": "integer"
                            },
                            "deletions": {
                              "type": "integer"
                            },
                            "changes": {
                              "type": "integer"
                            }
                          }
                        },
                        "hunks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "old_start": {
                                "type": "integer"
                              },
                              "old_lines": {
                                "type": "integer"
                              },
                              "new_start": {
                                "type": "integer"
                              },
                              "new_lines": {
                                "type": "integer"
                              },
                              "lines": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": ["context", "addition", "deletion"]
                                    },
                                    "content": {
                                      "type": "string"
                                    },
                                    "line_number_old": {
                                      "type": "integer"
                                    },
                                    "line_number_new": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": ["file_path", "from_version", "to_version", "format", "diff_content"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "SnapshotList": {
        "description": "List of workspace snapshots",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Snapshot"
                  }
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "Snapshot": {
        "description": "Workspace snapshot details",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/Snapshot"
            }
          }
        }
      },
      "RestoreResult": {
        "description": "Snapshot restore operation result",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["restore-result"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "restored_files": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "conflicted_files": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "backup_snapshot_id": {
                          "type": "string",
                          "nullable": true
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "required": ["success", "restored_files", "message"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "MarkdownExecutionResult": {
        "description": "Markdown execution result",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["markdown-execution-result"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "file_path": {
                          "type": "string"
                        },
                        "execution_mode": {
                          "type": "string"
                        },
                        "total_blocks": {
                          "type": "integer"
                        },
                        "executed_blocks": {
                          "type": "integer"
                        },
                        "successful_blocks": {
                          "type": "integer"
                        },
                        "failed_blocks": {
                          "type": "integer"
                        },
                        "execution_time": {
                          "type": "integer",
                          "description": "Total execution time in milliseconds"
                        },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "block_id": {
                                "type": "string"
                              },
                              "language": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string",
                                "enum": ["success", "error", "skipped"]
                              },
                              "output": {
                                "type": "string"
                              },
                              "error": {
                                "type": "string",
                                "nullable": true
                              },
                              "execution_time": {
                                "type": "integer"
                              },
                              "variables_created": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "context_id": {
                          "type": "string"
                        }
                      },
                      "required": ["file_path", "total_blocks", "executed_blocks", "results"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "MarkdownParseResult": {
        "description": "Markdown parsing result",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["markdown-parse-result"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "file_path": {
                          "type": "string"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "tags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "frontmatter": {
                              "type": "object"
                            }
                          }
                        },
                        "structure": {
                          "type": "object",
                          "properties": {
                            "headings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "integer"
                                  },
                                  "text": {
                                    "type": "string"
                                  },
                                  "line": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "links": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "text": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "line": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "code_blocks": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CodeBlock"
                          }
                        },
                        "statistics": {
                          "type": "object",
                          "properties": {
                            "total_lines": {
                              "type": "integer"
                            },
                            "code_blocks_count": {
                              "type": "integer"
                            },
                            "executable_blocks": {
                              "type": "integer"
                            },
                            "languages": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "required": ["file_path", "code_blocks"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      }      "TeamList": {
        "description": "List of teams",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "DirectoryListing": {
        "description": "Directory contents",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileSystemItem"
                  }
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "Current directory path"
                    },
                    "total_items": {
                      "type": "integer"
                    }
                  }
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileSystemItem": {
        "description": "File system item details",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/FileSystemItem"
            }
          }
        }
      },
      "EditorFile": {
        "description": "File content for editing",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["editor-file"]
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string"
                        },
                        "mime_type": {
                          "type": "string"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": ["utf8", "base64"]
                        },
                        "version": {
                          "type": "integer",
                          "description": "Document version for collaboration"
                        },
                        "size": {
                          "type": "integer"
                        },
                        "line_count": {
                          "type": "integer"
                        },
                        "language": {
                          "type": "string",
                          "description": "Programming language detected"
                        },
                        "is_binary": {
                          "type": "boolean"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "syntax_errors": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "line": {
                                    "type": "integer"
                                  },
                                  "column": {
                                    "type": "integer"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "code_blocks": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "language": {
                                    "type": "string"
                                  },
                                  "start_line": {
                                    "type": "integer"
                                  },
                                  "end_line": {
                                    "type": "integer"
                                  },
                                  "executable": {
                                    "type": "boolean"
                                  {
  "openapi": "3.0.0",
  "info": {
    "title": "Kyozo API",
    "version": "0.2.0",
    "description": "Executable markdown workspace system with git repository management and real-time collaboration"
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/api/workspaces": {
      "get": {
        "summary": "List all workspaces",
        "operationId": "getWorkspaces",
        "tags": ["workspaces"],
        "responses": {
          "200": {
            "$ref": "#/components/responses/WorkspaceList"
          }
        }
      },
      "post": {
        "summary": "Create new workspace",
        "operationId": "createWorkspace",
        "tags": ["workspaces"],
        "requestBody": {
          "$ref": "#/components/requestBodies/WorkspaceCreate"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/WorkspaceCreated"
          }
        }
      }
    },
    "/api/workspaces/{id}": {
      "get": {
        "summary": "Get workspace details",
        "operationId": "getWorkspace",
        "tags": ["workspaces"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Workspace"
          }
        }
      },
      "patch": {
        "summary": "Update workspace",
        "operationId": "updateWorkspace",
        "tags": ["workspaces"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/WorkspaceUpdate"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Workspace"
          }
        }
      },
      "delete": {
        "summary": "Delete workspace",
        "operationId": "deleteWorkspace",
        "tags": ["workspaces"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Workspace deleted"
          }
        }
      }
    },
    "/api/workspaces/{id}/execute": {
      "post": {
        "summary": "Execute code in workspace context",
        "operationId": "executeCode",
        "tags": ["execution"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ExecutionRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ExecutionResult"
          },
          "400": {
            "$ref": "#/components/responses/ExecutionError"
          },
          "408": {
            "$ref": "#/components/responses/ExecutionTimeout"
          }
        }
      }
    },
    "/api/workspaces/{id}/execution-contexts": {
      "get": {
        "summary": "List active execution contexts",
        "operationId": "getExecutionContexts",
        "tags": ["execution"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ExecutionContextList"
          }
        }
      },
      "post": {
        "summary": "Create new execution context",
        "operationId": "createExecutionContext",
        "tags": ["execution"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ExecutionContextCreate"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/ExecutionContext"
          }
        }
      }
    },
    "/api/workspaces/{id}/execution-contexts/{context_id}": {
      "get": {
        "summary": "Get execution context details",
        "operationId": "getExecutionContext",
        "tags": ["execution"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "$ref": "#/components/parameters/ExecutionContextId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ExecutionContext"
          }
        }
      },
      "delete": {
        "summary": "Destroy execution context",
        "operationId": "deleteExecutionContext",
        "tags": ["execution"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "$ref": "#/components/parameters/ExecutionContextId"
          }
        ],
        "responses": {
          "204": {
            "description": "Execution context destroyed"
          }
        }
      }
    },
    "/api/workspaces/{id}/git/status": {
      "get": {
        "summary": "Get git repository status",
        "operationId": "getGitStatus",
        "tags": ["git"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GitStatus"
          }
        }
      }
    },
    "/api/workspaces/{id}/git/sync": {
      "post": {
        "summary": "Sync with remote repository",
        "operationId": "syncRepository",
        "tags": ["git"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GitSync"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/GitSyncResult"
          },
          "409": {
            "$ref": "#/components/responses/GitConflict"
          }
        }
      }
    },
    "/api/files": {
      "post": {
        "summary": "Create new file",
        "operationId": "createFile",
        "tags": ["files"],
        "requestBody": {
          "$ref": "#/components/requestBodies/FileCreate"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/File"
          }
        }
      }
    },
    "/api/files/{id}": {
      "get": {
        "summary": "Get file content",
        "operationId": "getFile",
        "tags": ["files"],
        "parameters": [
          {
            "$ref": "#/components/parameters/FileId"
          },
          {
            "name": "decrypt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Decrypt file content if encrypted"
          },
          {
            "name": "include_content",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            },
            "description": "Include file content in response"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/File"
          }
        }
      },
      "patch": {
        "summary": "Update file content",
        "operationId": "updateFile",
        "tags": ["files"],
        "parameters": [
          {
            "$ref": "#/components/parameters/FileId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/FileUpdate"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/File"
          }
        }
      }
    },
    "/api/files/{id}/encrypt": {
      "post": {
        "summary": "Encrypt file content",
        "operationId": "encryptFile",
        "tags": ["files", "encryption"],
        "parameters": [
          {
            "$ref": "#/components/parameters/FileId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/FileEncryption"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/File"
          }
        }
      }
    },
    "/api/files/{id}/decrypt": {
      "post": {
        "summary": "Decrypt file content",
        "operationId": "decryptFile",
        "tags": ["files", "encryption"],
        "parameters": [
          {
            "$ref": "#/components/parameters/FileId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/FileDecryption"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/File"
          }
        }
      }
    },
    "/api/media": {
      "post": {
        "summary": "Upload media file",
        "operationId": "uploadMedia",
        "tags": ["media"],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "workspace_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "path": {
                    "type": "string",
                    "description": "Target path within workspace"
                  },
                  "generate_thumbnails": {
                    "type": "boolean",
                    "default": true
                  },
                  "thumbnail_sizes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": ["small", "medium", "large"]
                    },
                    "default": ["small", "medium", "large"]
                  },
                  "extract_metadata": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "required": ["file", "workspace_id", "path"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Media"
          }
        }
      }
    },
    "/api/media/{id}": {
      "get": {
        "summary": "Get media file details",
        "operationId": "getMedia",
        "tags": ["media"],
        "parameters": [
          {
            "$ref": "#/components/parameters/FileId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Media"
          }
        }
      }
    },
    "/api/media/{id}/thumbnails": {
      "post": {
        "summary": "Generate thumbnails for media file",
        "operationId": "generateThumbnails",
        "tags": ["media"],
        "parameters": [
          {
            "$ref": "#/components/parameters/FileId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ThumbnailGeneration"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Media"
          }
        }
      }
    },
    "/api/media/{id}/preview": {
      "post": {
        "summary": "Generate preview formats for media file",
        "operationId": "generatePreviews",
        "tags": ["media"],
        "parameters": [
          {
            "$ref": "#/components/parameters/FileId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PreviewGeneration"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Media"
          }
        }
      }
    },
    "/api/workspaces/{id}/fs": {
      "get": {
        "summary": "List directory contents",
        "operationId": "listDirectory",
        "tags": ["filesystem"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "/"
            },
            "description": "Directory path relative to workspace root"
          },
          {
            "name": "recursive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Include subdirectories recursively"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DirectoryListing"
          }
        }
      }
    },
    "/api/workspaces/{id}/fs/files": {
      "post": {
        "summary": "Create new file",
        "operationId": "createFileInWorkspace",
        "tags": ["filesystem"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/FileSystemCreate"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/FileSystemItem"
          }
        }
      }
    },
    "/api/workspaces/{id}/fs/directories": {
      "post": {
        "summary": "Create new directory",
        "operationId": "createDirectory",
        "tags": ["filesystem"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/DirectoryCreate"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/FileSystemItem"
          }
        }
      }
    },
    "/api/workspaces/{id}/fs/items/{path}": {
      "get": {
        "summary": "Get file or directory info",
        "operationId": "getFileSystemItem",
        "tags": ["filesystem"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File or directory path"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/FileSystemItem"
          }
        }
      },
      "delete": {
        "summary": "Delete file or directory",
        "operationId": "deleteFileSystemItem",
        "tags": ["filesystem"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File or directory path"
          },
          {
            "name": "recursive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Delete directory recursively"
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted successfully"
          }
        }
      }
    },
    "/api/workspaces/{id}/fs/move": {
      "post": {
        "summary": "Move/rename file or directory",
        "operationId": "moveFileSystemItem",
        "tags": ["filesystem"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/FileSystemMove"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/FileSystemItem"
          }
        }
      }
    },
    "/api/workspaces/{id}/fs/copy": {
      "post": {
        "summary": "Copy file or directory",
        "operationId": "copyFileSystemItem",
        "tags": ["filesystem"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/FileSystemCopy"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/FileSystemItem"
          }
        }
      }
    },
    "/api/workspaces/{id}/fs/upload": {
      "post": {
        "summary": "Upload file to workspace",
        "operationId": "uploadFile",
        "tags": ["filesystem"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "path": {
                    "type": "string",
                    "description": "Target path within workspace"
                  },
                  "overwrite": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": ["file", "path"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/FileSystemItem"
          }
        }
      }
    },
    "/api/workspaces/{id}/fs/history/{path}": {
      "get": {
        "summary": "Get file history",
        "operationId": "getFileHistory",
        "tags": ["filesystem", "history"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File path"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 500
            },
            "description": "Maximum number of history entries"
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Get history since this timestamp"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/FileHistoryList"
          }
        }
      }
    },
    "/api/workspaces/{id}/fs/versions/{path}/{version_id}": {
      "get": {
        "summary": "Get specific file version",
        "operationId": "getFileVersion",
        "tags": ["filesystem", "history"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File path"
          },
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Version identifier (commit hash or snapshot ID)"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/FileVersion"
          }
        }
      }
    },
    "/api/workspaces/{id}/fs/diff/{path}": {
      "get": {
        "summary": "Compare file versions",
        "operationId": "getFileDiff",
        "tags": ["filesystem", "history"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File path"
          },
          {
            "name": "from_version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Source version ID"
          },
          {
            "name": "to_version",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Target version ID (defaults to current)"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["unified", "side-by-side", "json"],
              "default": "unified"
            },
            "description": "Diff format"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/FileDiff"
          }
        }
      }
    },
    "/api/workspaces/{id}/snapshots": {
      "get": {
        "summary": "List workspace snapshots",
        "operationId": "getSnapshots",
        "tags": ["filesystem", "snapshots"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SnapshotList"
          }
        }
      },
      "post": {
        "summary": "Create workspace snapshot",
        "operationId": "createSnapshot",
        "tags": ["filesystem", "snapshots"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/SnapshotCreate"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Snapshot"
          }
        }
      }
    },
    "/api/workspaces/{id}/snapshots/{snapshot_id}": {
      "get": {
        "summary": "Get snapshot details",
        "operationId": "getSnapshot",
        "tags": ["filesystem", "snapshots"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "$ref": "#/components/parameters/SnapshotId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Snapshot"
          }
        }
      },
      "delete": {
        "summary": "Delete snapshot",
        "operationId": "deleteSnapshot",
        "tags": ["filesystem", "snapshots"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "$ref": "#/components/parameters/SnapshotId"
          }
        ],
        "responses": {
          "204": {
            "description": "Snapshot deleted"
          }
        }
      }
    },
    "/api/workspaces/{id}/snapshots/{snapshot_id}/restore": {
      "post": {
        "summary": "Restore workspace from snapshot",
        "operationId": "restoreSnapshot",
        "tags": ["filesystem", "snapshots"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "$ref": "#/components/parameters/SnapshotId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/SnapshotRestore"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/RestoreResult"
          }
        }
      }
    },
    "/api/workspaces/{id}/markdown/execute": {
      "post": {
        "summary": "Execute markdown file",
        "operationId": "executeMarkdown",
        "tags": ["markdown", "execution"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/MarkdownExecution"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/MarkdownExecutionResult"
          },
          "400": {
            "$ref": "#/components/responses/ExecutionError"
          }
        }
      }
    },
    "/api/workspaces/{id}/markdown/parse": {
      "post": {
        "summary": "Parse markdown file and extract code blocks",
        "operationId": "parseMarkdown",
        "tags": ["markdown"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/MarkdownParse"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/MarkdownParseResult"
          }
        }
      }
    },
    "/api/workspaces/{id}/markdown/blocks/{block_id}/execute": {
      "post": {
        "summary": "Execute specific markdown code block",
        "operationId": "executeMarkdownBlock",
        "tags": ["markdown", "execution"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Code block identifier"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/BlockExecution"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ExecutionResult"
          },
          "400": {
            "$ref": "#/components/responses/ExecutionError"
          }
        }
      }
    },
    "/api/workspaces/{id}/fs/shares": {
      "get": {
        "summary": "List shared links for workspace",
        "operationId": "getSharedLinks",
        "tags": ["filesystem", "sharing"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by specific file/directory path"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["active", "expired", "disabled"]
            },
            "description": "Filter by link status"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SharedLinkList"
          }
        }
      },
      "post": {
        "summary": "Create shared link for file or directory",
        "operationId": "createSharedLink",
        "tags": ["filesystem", "sharing"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/SharedLinkCreate"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/SharedLink"
          }
        }
      }
    },
    "/api/workspaces/{id}/fs/shares/{share_id}": {
      "get": {
        "summary": "Get shared link details",
        "operationId": "getSharedLink",
        "tags": ["filesystem", "sharing"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "$ref": "#/components/parameters/ShareId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SharedLink"
          }
        }
      },
      "patch": {
        "summary": "Update shared link settings",
        "operationId": "updateSharedLink",
        "tags": ["filesystem", "sharing"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "$ref": "#/components/parameters/ShareId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/SharedLinkUpdate"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SharedLink"
          }
        }
      },
      "delete": {
        "summary": "Delete shared link",
        "operationId": "deleteSharedLink",
        "tags": ["filesystem", "sharing"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "$ref": "#/components/parameters/ShareId"
          }
        ],
        "responses": {
          "204": {
            "description": "Shared link deleted"
          }
        }
      }
    },
    "/api/workspaces/{id}/fs/shares/{share_id}/analytics": {
      "get": {
        "summary": "Get shared link analytics",
        "operationId": "getSharedLinkAnalytics",
        "tags": ["filesystem", "sharing"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "$ref": "#/components/parameters/ShareId"
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["day", "week", "month", "all"],
              "default": "week"
            },
            "description": "Analytics time period"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SharedLinkAnalytics"
          }
        }
      }
    },
    "/api/shares/{token}": {
      "get": {
        "summary": "Access shared file via public link",
        "operationId": "accessSharedLink",
        "tags": ["sharing", "public"],
        "security": [],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Shared link token"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Password for protected links"
          },
          {
            "name": "passkey_signature",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Passkey signature for encrypted links"
          },
          {
            "name": "download",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Force download instead of preview"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SharedFileAccess"
          },
          "401": {
            "$ref": "#/components/responses/SharedLinkUnauthorized"
          },
          "410": {
            "$ref": "#/components/responses/SharedLinkExpired"
          }
        }
      },
      "post": {
        "summary": "Access password/passkey protected shared link",
        "operationId": "authenticateSharedLink",
        "tags": ["sharing", "public"],
        "security": [],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Shared link token"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/SharedLinkAuth"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SharedFileAccess"
          },
          "401": {
            "$ref": "#/components/responses/SharedLinkUnauthorized"
          }
        }
      }
    },
    "/api/shares/{token}/info": {
      "get": {
        "summary": "Get shared link metadata (without authentication)",
        "operationId": "getSharedLinkInfo",
        "tags": ["sharing", "public"],
        "security": [],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Shared link token"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SharedLinkInfo"
          },
          "404": {
            "description": "Shared link not found"
          },
          "410": {
            "$ref": "#/components/responses/SharedLinkExpired"
          }
        }
      }
    },
    "/api/workspaces/{id}/editor/files/{path}": {
      "get": {
        "summary": "Get file content for editing",
        "operationId": "getFileForEditing",
        "tags": ["editor"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File path relative to workspace"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EditorFile"
          }
        }
      },
      "put": {
        "summary": "Save file content",
        "operationId": "saveFile",
        "tags": ["editor"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File path relative to workspace"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EditorSave"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/EditorFile"
          }
        }
      }
    },
    "/api/workspaces/{id}/editor/sessions": {
      "post": {
        "summary": "Create editing session",
        "operationId": "createEditingSession",
        "tags": ["editor"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/EditingSessionCreate"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/EditingSession"
          }
        }
      },
      "get": {
        "summary": "List active editing sessions",
        "operationId": "getEditingSessions",
        "tags": ["editor"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EditingSessionList"
          }
        }
      }
    },
    "/api/workspaces/{id}/editor/sessions/{session_id}": {
      "get": {
        "summary": "Get editing session details",
        "operationId": "getEditingSession",
        "tags": ["editor"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "$ref": "#/components/parameters/EditingSessionId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EditingSession"
          }
        }
      },
      "delete": {
        "summary": "Close editing session",
        "operationId": "closeEditingSession",
        "tags": ["editor"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "$ref": "#/components/parameters/EditingSessionId"
          }
        ],
        "responses": {
          "204": {
            "description": "Session closed"
          }
        }
      }
    },
    "/api/workspaces/{id}/editor/operations": {
      "post": {
        "summary": "Apply collaborative text operations",
        "operationId": "applyTextOperations",
        "tags": ["editor"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/TextOperations"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/OperationResult"
          }
        }
      }
    },
    "/api/workspaces/{id}/editor/cursors": {
      "post": {
        "summary": "Update cursor position",
        "operationId": "updateCursor",
        "tags": ["editor"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CursorUpdate"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CursorState"
          }
        }
      },
      "get": {
        "summary": "Get all cursor positions for file",
        "operationId": "getCursors",
        "tags": ["editor"],
        "parameters": [
          {
            "$ref": "#/components/parameters/WorkspaceId"
          },
          {
            "name": "file_path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "File path to get cursors for"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CursorStateList"
          }
        }
      }
    },
    "/api/organizations": {
      "get": {
        "summary": "List organizations",
        "operationId": "getOrganizations",
        "tags": ["organizations"],
        "responses": {
          "200": {
            "$ref": "#/components/responses/OrganizationList"
          }
        }
      },
      "post": {
        "summary": "Create organization",
        "operationId": "createOrganization",
        "tags": ["organizations"],
        "requestBody": {
          "$ref": "#/components/requestBodies/OrganizationCreate"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/Organization"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "parameters": {
      "WorkspaceId": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Workspace identifier"
      },
      "FileId": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "File identifier"
      },
      "ExecutionContextId": {
        "name": "context_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Execution context identifier"
      },
      "EditingSessionId": {
        "name": "session_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Editing session identifier"
      },
      "SnapshotId": {
        "name": "snapshot_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Snapshot identifier"
      },
      "ShareId": {
        "name": "share_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Shared link identifier"
      },
      "TabId": {
        "name": "tab_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "File tab identifier"
      },
      "UserId": {
        "name": "user_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "User identifier"
      }
    },
    "requestBodies": {
      "ExecutionRequest": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["execution"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Elixir code to execute"
                        },
                        "context_id": {
                          "type": "string",
                          "description": "Execution context identifier for state persistence"
                        },
                        "timeout": {
                          "type": "integer",
                          "minimum": 1000,
                          "maximum": 30000,
                          "default": 5000,
                          "description": "Execution timeout in milliseconds"
                        },
                        "workspace_id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Associated workspace for context"
                        },
                        "block_id": {
                          "type": "string",
                          "description": "Code block identifier within file"
                        }
                      },
                      "required": ["code"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "ExecutionContextCreate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["execution-context"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Human-readable context name"
                        },
                        "workspace_id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Associated workspace"
                        }
                      },
                      "required": ["name"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "GitSync": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["git-sync"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "operation": {
                          "type": "string",
                          "enum": ["pull", "push", "fetch"]
                        },
                        "remote": {
                          "type": "string",
                          "default": "origin"
                        },
                        "branch": {
                          "type": "string",
                          "default": "main"
                        },
                        "force": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "required": ["operation"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "WorkspaceCreate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["workspace"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "pattern": "[a-zA-Z][a-zA-Z0-9_\\s]+"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "git_url": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true
                        }
                      },
                      "required": ["name"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "WorkspaceUpdate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["workspace"]
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  },
                  "required": ["type", "id"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileCreate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["file"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "filename": {
                          "type": "string",
                          "pattern": "[a-zA-Z][a-zA-Z0-9_\\s\\.]+"
                        },
                        "content": {
                          "type": "string"
                        },
                        "mime_type": {
                          "type": "string",
                          "default": "text/markdown"
                        }
                      },
                      "required": ["filename"]
                    },
                    "relationships": {
                      "type": "object",
                      "properties": {
                        "workspace": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": ["workspace"]
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              },
                              "required": ["type", "id"]
                            }
                          },
                          "required": ["data"]
                        }
                      },
                      "required": ["workspace"]
                    }
                  },
                  "required": ["type", "attributes", "relationships"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileUpdate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["file"]
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "filename": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": ["type", "id"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "TeamCreate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["team"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "pattern": "[a-zA-Z][a-zA-Z0-9_\\s]+"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "shorthand": {
                          "type": "string",
                          "pattern": "[a-zA-Z][a-zA-Z0-9_-]*",
                          "maxLength": 16,
                          "description": "Team shorthand/slug (e.g., 'acme', 'my-team')"
                        }
                      },
                      "required": ["name", "shorthand"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileSystemCreate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["file"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "File path relative to workspace root"
                        },
                        "content": {
                          "type": "string",
                          "description": "Initial file content"
                        },
                        "encoding": {
                          "type": "string",
                          "enum": ["utf8", "base64"],
                          "default": "utf8"
                        }
                      },
                      "required": ["path"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "DirectoryCreate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["directory"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "Directory path relative to workspace root"
                        }
                      },
                      "required": ["path"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileSystemMove": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["fs-operation"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "from_path": {
                          "type": "string",
                          "description": "Source path"
                        },
                        "to_path": {
                          "type": "string",
                          "description": "Destination path"
                        }
                      },
                      "required": ["from_path", "to_path"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileSystemCopy": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["fs-operation"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "from_path": {
                          "type": "string",
                          "description": "Source path"
                        },
                        "to_path": {
                          "type": "string",
                          "description": "Destination path"
                        },
                        "recursive": {
                          "type": "boolean",
                          "default": true,
                          "description": "Copy directories recursively"
                        }
                      },
                      "required": ["from_path", "to_path"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "EditorSave": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["editor-save"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string",
                          "description": "File content to save"
                        },
                        "version": {
                          "type": "integer",
                          "description": "Document version for conflict detection"
                        },
                        "session_id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Editing session identifier"
                        }
                      },
                      "required": ["content"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "EditingSessionCreate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["editing-session"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "file_path": {
                          "type": "string",
                          "description": "Path to file being edited"
                        },
                        "editor_type": {
                          "type": "string",
                          "enum": ["markdown", "code", "text"],
                          "default": "text"
                        }
                      },
                      "required": ["file_path"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "TextOperations": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["text-operations"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "file_path": {
                          "type": "string"
                        },
                        "session_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "operations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["insert", "delete", "retain"]
                              },
                              "offset": {
                                "type": "integer",
                                "description": "Character offset in document"
                              },
                              "length": {
                                "type": "integer",
                                "description": "Number of characters affected"
                              },
                              "content": {
                                "type": "string",
                                "description": "Content to insert (for insert operations)"
                              }
                            },
                            "required": ["type", "offset"]
                          }
                        },
                        "base_version": {
                          "type": "integer",
                          "description": "Document version these operations are based on"
                        }
                      },
                      "required": ["file_path", "session_id", "operations", "base_version"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "CursorUpdate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["cursor-update"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "file_path": {
                          "type": "string"
                        },
                        "session_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "position": {
                          "type": "object",
                          "properties": {
                            "line": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "column": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "offset": {
                              "type": "integer",
                              "minimum": 0,
                              "description": "Character offset from start of document"
                            }
                          },
                          "required": ["line", "column", "offset"]
                        },
                        "selection": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "start": {
                              "type": "object",
                              "properties": {
                                "line": {
                                  "type": "integer"
                                },
                                "column": {
                                  "type": "integer"
                                },
                                "offset": {
                                  "type": "integer"
                                }
                              },
                              "required": ["line", "column", "offset"]
                            },
                            "end": {
                              "type": "object",
                              "properties": {
                                "line": {
                                  "type": "integer"
                                },
                                "column": {
                                  "type": "integer"
                                },
                                "offset": {
                                  "type": "integer"
                                }
                              },
                              "required": ["line", "column", "offset"]
                            }
                          },
                          "required": ["start", "end"]
                        }
                      },
                      "required": ["file_path", "session_id", "position"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "SnapshotCreate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["snapshot"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Human-readable snapshot name"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true,
                          "description": "Optional snapshot description"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Optional tags for categorization"
                        },
                        "include_paths": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specific paths to include (defaults to all)"
                        },
                        "exclude_paths": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Paths to exclude from snapshot"
                        }
                      },
                      "required": ["name"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "SnapshotRestore": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["restore-operation"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "strategy": {
                          "type": "string",
                          "enum": ["replace", "merge", "selective"],
                          "default": "replace",
                          "description": "How to handle conflicts during restore"
                        },
                        "paths": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Specific paths to restore (for selective strategy)"
                        },
                        "create_backup": {
                          "type": "boolean",
                          "default": true,
                          "description": "Create snapshot of current state before restore"
                        }
                      }
                    }
                  },
                  "required": ["type"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "MarkdownExecution": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["markdown-execution"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "file_path": {
                          "type": "string",
                          "description": "Path to markdown file"
                        },
                        "execution_mode": {
                          "type": "string",
                          "enum": ["sequential", "parallel", "selective"],
                          "default": "sequential",
                          "description": "How to execute multiple code blocks"
                        },
                        "block_filters": {
                          "type": "object",
                          "properties": {
                            "languages": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Only execute blocks of these languages"
                            },
                            "tags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Only execute blocks with these tags"
                            },
                            "block_ids": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Specific block IDs to execute"
                            }
                          }
                        },
                        "context_id": {
                          "type": "string",
                          "description": "Execution context for state persistence"
                        },
                        "variables": {
                          "type": "object",
                          "description": "Variables to inject into execution context"
                        }
                      },
                      "required": ["file_path"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "MarkdownParse": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["markdown-parse"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "file_path": {
                          "type": "string",
                          "description": "Path to markdown file"
                        },
                        "extract_metadata": {
                          "type": "boolean",
                          "default": true,
                          "description": "Extract frontmatter and metadata"
                        }
                      },
                      "required": ["file_path"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "BlockExecution": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["block-execution"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "file_path": {
                          "type": "string",
                          "description": "Path to markdown file containing the block"
                        },
                        "context_id": {
                          "type": "string",
                          "description": "Execution context for state persistence"
                        },
                        "variables": {
                          "type": "object",
                          "description": "Variables to inject into execution"
                        },
                        "timeout": {
                          "type": "integer",
                          "minimum": 1000,
                          "maximum": 30000,
                          "default": 5000
                        }
                      },
                      "required": ["file_path"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "SharedLinkCreate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["shared-link"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "File or directory path to share"
                        },
                        "name": {
                          "type": "string",
                          "description": "Human-readable name for the shared link"
                        },
                        "protection_type": {
                          "type": "string",
                          "enum": ["public", "password", "passkey"],
                          "default": "public",
                          "description": "Type of protection for the shared link"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password for password-protected links"
                        },
                        "passkey_user_id": {
                          "type": "string",
                          "description": "User ID for passkey encryption"
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "download": {
                              "type": "boolean",
                              "default": true
                            },
                            "preview": {
                              "type": "boolean",
                              "default": true
                            },
                            "execute": {
                              "type": "boolean",
                              "default": false,
                              "description": "Allow execution of markdown code blocks"
                            }
                          }
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "description": "Expiration date (null for no expiration)"
                        },
                        "max_downloads": {
                          "type": "integer",
                          "nullable": true,
                          "description": "Maximum download count (null for unlimited)"
                        },
                        "track_analytics": {
                          "type": "boolean",
                          "default": true,
                          "description": "Track access analytics"
                        }
                      },
                      "required": ["path", "name", "protection_type"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "SharedLinkUpdate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["shared-link"]
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "protection_type": {
                          "type": "string",
                          "enum": ["public", "password", "passkey"]
                        },
                        "password": {
                          "type": "string",
                          "nullable": true
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "download": {
                              "type": "boolean"
                            },
                            "preview": {
                              "type": "boolean"
                            },
                            "execute": {
                              "type": "boolean"
                            }
                          }
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "max_downloads": {
                          "type": "integer",
                          "nullable": true
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Enable/disable the shared link"
                        }
                      }
                    }
                  },
                  "required": ["type", "id"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "SharedLinkAuth": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["shared-link-auth"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "password": {
                          "type": "string",
                          "description": "Password for password-protected links"
                        },
                        "passkey_credential": {
                          "type": "object",
                          "description": "WebAuthn credential for passkey-protected links",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "rawId": {
                              "type": "string"
                            },
                            "response": {
                              "type": "object",
                              "properties": {
                                "authenticatorData": {
                                  "type": "string"
                                },
                                "clientDataJSON": {
                                  "type": "string"
                                },
                                "signature": {
                                  "type": "string"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": ["public-key"]
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "UserWorkspaceStateSave": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["user-workspace-state"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "open_files": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/FileTabState"
                          },
                          "description": "Currently open file tabs"
                        },
                        "active_file": {
                          "type": "string",
                          "nullable": true,
                          "description": "Path of currently active file"
                        },
                        "layout": {
                          "$ref": "#/components/schemas/WorkspaceLayoutConfig"
                        },
                        "preferences": {
                          "$ref": "#/components/schemas/WorkspaceUserPreferences"
                        },
                        "sidebar_state": {
                          "type": "object",
                          "properties": {
                            "visible": {
                              "type": "boolean"
                            },
                            "width": {
                              "type": "integer"
                            },
                            "active_panel": {
                              "type": "string",
                              "enum": ["files", "git", "search", "extensions"]
                            }
                          }
                        },
                        "panel_states": {
                          "type": "object",
                          "properties": {
                            "terminal": {
                              "type": "object",
                              "properties": {
                                "visible": {
                                  "type": "boolean"
                                },
                                "height": {
                                  "type": "integer"
                                }
                              }
                            },
                            "output": {
                              "type": "object",
                              "properties": {
                                "visible": {
                                  "type": "boolean"
                                },
                                "height": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        },
                        "recent_files": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string"
                              },
                              "last_opened": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "UserWorkspaceStateUpdate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["user-workspace-state"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "active_file": {
                          "type": "string",
                          "nullable": true
                        },
                        "sidebar_state": {
                          "type": "object",
                          "properties": {
                            "visible": {
                              "type": "boolean"
                            },
                            "width": {
                              "type": "integer"
                            },
                            "active_panel": {
                              "type": "string"
                            }
                          }
                        },
                        "panel_states": {
                          "type": "object"
                        }
                      }
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileTabAdd": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["file-tab"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "file_path": {
                          "type": "string",
                          "description": "Path to file being opened"
                        },
                        "position": {
                          "type": "integer",
                          "description": "Tab position in tab bar"
                        },
                        "make_active": {
                          "type": "boolean",
                          "default": true,
                          "description": "Make this tab active after opening"
                        }
                      },
                      "required": ["file_path"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileTabUpdate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["file-tab"]
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "position": {
                          "type": "integer"
                        },
                        "is_dirty": {
                          "type": "boolean",
                          "description": "File has unsaved changes"
                        },
                        "scroll_position": {
                          "type": "object",
                          "properties": {
                            "line": {
                              "type": "integer"
                            },
                            "column": {
                              "type": "integer"
                            }
                          }
                        },
                        "cursor_position": {
                          "type": "object",
                          "properties": {
                            "line": {
                              "type": "integer"
                            },
                            "column": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["type", "id"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "WorkspaceLayoutSave": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["workspace-layout"]
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/WorkspaceLayoutConfig"
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "WorkspacePreferencesSave": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["workspace-preferences"]
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/WorkspaceUserPreferences"
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileEncryption": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["file-encryption"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "encryption_method": {
                          "type": "string",
                          "enum": ["aes-256-gcm", "chacha20-poly1305"],
                          "default": "aes-256-gcm"
                        },
                        "key_source": {
                          "type": "string",
                          "enum": ["user-provided", "auto-generated", "workspace-key"],
                          "default": "auto-generated"
                        },
                        "encryption_key": {
                          "type": "string",
                          "description": "Base64-encoded encryption key (if user-provided)"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password for key derivation (alternative to direct key)"
                        }
                      },
                      "required": ["encryption_method", "key_source"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileDecryption": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["file-decryption"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "decryption_key": {
                          "type": "string",
                          "description": "Base64-encoded decryption key"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password for key derivation"
                        },
                        "key_id": {
                          "type": "string",
                          "description": "Reference to stored encryption key"
                        }
                      }
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "ThumbnailGeneration": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["thumbnail-generation"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "sizes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": ["small", "medium", "large"]
                          },
                          "default": ["small", "medium", "large"]
                        },
                        "format": {
                          "type": "string",
                          "enum": ["webp", "jpg", "png"],
                          "default": "webp"
                        },
                        "quality": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 100,
                          "default": 85
                        },
                        "preserve_aspect_ratio": {
                          "type": "boolean",
                          "default": true
                        },
                        "background_color": {
                          "type": "string",
                          "pattern": "^#[0-9A-Fa-f]{6}$",
                          "default": "#FFFFFF",
                          "description": "Background color for transparent images"
                        }
                      }
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "PreviewGeneration": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["preview-generation"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "formats": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": ["webp", "jpg", "png", "mp4", "webm", "mp3", "wav"]
                          },
                          "description": "Preview formats to generate"
                        },
                        "qualities": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": ["low", "medium", "high"]
                          },
                          "default": ["medium"]
                        },
                        "max_duration": {
                          "type": "integer",
                          "description": "Maximum preview duration in seconds (for video/audio)"
                        },
                        "start_time": {
                          "type": "number",
                          "description": "Start time for preview extraction (for video/audio)"
                        }
                      },
                      "required": ["formats"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "WorkspaceAclUpdate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["workspace-acl"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "default_permissions": {
                          "$ref": "#/components/schemas/PermissionSet"
                        },
                        "inheritance_policy": {
                          "type": "string",
                          "enum": ["inherit", "override", "merge"],
                          "default": "inherit"
                        },
                        "access_policy": {
                          "type": "string",
                          "enum": ["open", "invite-only", "private"],
                          "default": "invite-only"
                        }
                      }
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "WorkspaceMemberAdd": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["workspace-member"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "role": {
                          "type": "string",
                          "enum": ["owner", "admin", "editor", "viewer", "custom"]
                        },
                        "custom_permissions": {
                          "$ref": "#/components/schemas/PermissionSet",
                          "description": "Required if role is 'custom'"
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "description": "Access expiration (null for permanent)"
                        }
                      },
                      "required": ["user_id", "role"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "WorkspaceMemberUpdate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["workspace-member"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string",
                          "enum": ["owner", "admin", "editor", "viewer", "custom"]
                        },
                        "custom_permissions": {
                          "$ref": "#/components/schemas/PermissionSet"
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        }
                      }
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "WorkspaceRoleCreate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["workspace-role"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Role name (e.g., 'Content Editor')"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "permissions": {
                          "$ref": "#/components/schemas/PermissionSet"
                        },
                        "is_default": {
                          "type": "boolean",
                          "default": false,
                          "description": "Default role for new members"
                        }
                      },
                      "required": ["name", "permissions"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileAclUpdate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["file-acl"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "inherit_workspace_acl": {
                          "type": "boolean",
                          "default": true
                        },
                        "specific_permissions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SpecificPermission"
                          }
                        },
                        "access_policy": {
                          "type": "string",
                          "enum": ["workspace-default", "restricted", "public-read"],
                          "default": "workspace-default"
                        }
                      }
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "PermissionCheck": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["permission-check"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "permissions": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": ["read", "write", "delete", "execute", "share", "admin"]
                          }
                        }
                      },
                      "required": ["user_id", "permissions"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "UserAclUpdate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["user-acl"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "global_role": {
                          "type": "string",
                          "enum": ["super-admin", "admin", "user", "restricted"]
                        },
                        "global_permissions": {
                          "$ref": "#/components/schemas/GlobalPermissionSet"
                        },
                        "workspace_creation_allowed": {
                          "type": "boolean",
                          "default": true
                        },
                        "max_workspaces": {
                          "type": "integer",
                          "nullable": true,
                          "description": "Maximum workspaces user can create (null for unlimited)"
                        }
                      }
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "EphemeralSettingsUpdate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["ephemeral-settings"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "lifetime_duration": {
                          "type": "integer",
                          "minimum": 60,
                          "description": "Lifetime in seconds (minimum 1 minute)"
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Specific expiration time (alternative to duration)"
                        },
                        "auto_extend": {
                          "type": "boolean",
                          "default": false,
                          "description": "Automatically extend lifetime on activity"
                        },
                        "extend_by": {
                          "type": "integer",
                          "description": "Seconds to extend by when auto-extending"
                        },
                        "max_extensions": {
                          "type": "integer",
                          "nullable": true,
                          "description": "Maximum number of automatic extensions"
                        },
                        "warning_thresholds": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          },
                          "description": "Warning notifications before expiry (in seconds)",
                          "default": [3600, 1800, 300]
                        },
                        "purge_policy": {
                          "type": "string",
                          "enum": ["immediate", "soft-delete", "archive"],
                          "default": "soft-delete",
                          "description": "What to do when lifetime expires"
                        },
                        "archive_location": {
                          "type": "string",
                          "nullable": true,
                          "description": "Where to archive content (if purge_policy is archive)"
                        },
                        "notify_users": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "description": "Users to notify about expiration"
                        },
                        "inheritance_policy": {
                          "type": "string",
                          "enum": ["inherit", "override", "shorter-wins"],
                          "default": "shorter-wins",
                          "description": "How child items inherit ephemeral settings"
                        }
                      }
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "LifetimeExtension": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["lifetime-extension"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "extend_by": {
                          "type": "integer",
                          "minimum": 60,
                          "description": "Seconds to extend lifetime by"
                        },
                        "new_expiry": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Set specific new expiry time"
                        },
                        "reason": {
                          "type": "string",
                          "description": "Reason for extension"
                        }
                      }
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "EphemeralCleanup": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["ephemeral-cleanup"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "dry_run": {
                          "type": "boolean",
                          "default": false,
                          "description": "Preview what would be cleaned up"
                        },
                        "force": {
                          "type": "boolean",
                          "default": false,
                          "description": "Force cleanup even if not expired"
                        },
                        "types": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": ["workspace", "file", "directory"]
                          },
                          "description": "Types of items to clean up"
                        },
                        "workspace_ids": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "description": "Specific workspaces to clean up"
                        }
                      }
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "DownloadRecord": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["download-record"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "client_ip": {
                          "type": "string",
                          "description": "Client IP address"
                        },
                        "user_agent": {
                          "type": "string",
                          "description": "User agent string"
                        },
                        "download_method": {
                          "type": "string",
                          "enum": ["direct", "shared-link", "guest-link", "api"],
                          "default": "direct"
                        },
                        "shared_link_id": {
                          "type": "string",
                          "format": "uuid",
                          "nullable": true,
                          "description": "ID of shared link used (if applicable)"
                        },
                        "guest_link_id": {
                          "type": "string",
                          "format": "uuid",
                          "nullable": true,
                          "description": "ID of guest link used (if applicable)"
                        },
                        "referrer": {
                          "type": "string",
                          "nullable": true,
                          "description": "HTTP referrer"
                        },
                        "file_size": {
                          "type": "integer",
                          "description": "Size of downloaded file in bytes"
                        }
                      },
                      "required": ["client_ip", "user_agent", "download_method", "file_size"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "GuestLinkCreate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["guest-link"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "Human-readable label for the guest link"
                        },
                        "workspace_id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Target workspace for uploads"
                        },
                        "url_expires": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "description": "When the upload URL expires (null for never)"
                        },
                        "max_file_lifetime": {
                          "type": "integer",
                          "nullable": true,
                          "description": "Maximum lifetime for uploaded files in seconds"
                        },
                        "max_file_bytes": {
                          "type": "integer",
                          "default": 104857600,
                          "description": "Maximum file size in bytes (default 100MB)"
                        },
                        "max_file_uploads": {
                          "type": "integer",
                          "nullable": true,
                          "description": "Maximum number of file uploads (null for unlimited)"
                        },
                        "is_encrypted": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether uploaded files should be encrypted"
                        },
                        "recipient": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": ["user_id", "email"]
                            },
                            "value": {
                              "type": "string",
                              "description": "User ID (UUID) or email address"
                            }
                          },
                          "required": ["type", "value"],
                          "description": "Intended recipient of the guest link"
                        },
                        "upload_path": {
                          "type": "string",
                          "default": "/",
                          "description": "Target directory path for uploads within workspace"
                        }
                      },
                      "required": ["label", "workspace_id", "recipient"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "GuestLinkUpdate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["guest-link"]
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "url_expires": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "max_file_lifetime": {
                          "type": "integer",
                          "nullable": true
                        },
                        "max_file_bytes": {
                          "type": "integer"
                        },
                        "max_file_uploads": {
                          "type": "integer",
                          "nullable": true
                        },
                        "is_disabled": {
                          "type": "boolean",
                          "description": "Disable the guest link"
                        },
                        "is_encrypted": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "required": ["type", "id"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "StoreCreate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["store"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "storage_type": {
                          "type": "string",
                          "enum": ["filestore", "s3store", "gcsstore", "azurestore"]
                        },
                        "configuration": {
                          "type": "object",
                          "description": "Storage-specific configuration",
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/FilestoreConfig"
                            },
                            {
                              "$ref": "#/components/schemas/S3StoreConfig"
                            },
                            {
                              "$ref": "#/components/schemas/GCSStoreConfig"
                            },
                            {
                              "$ref": "#/components/schemas/AzureStoreConfig"
                            }
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "checksum": {
                              "type": "string",
                              "description": "File checksum for integrity verification"
                            },
                            "size": {
                              "type": "integer",
                              "description": "File size in bytes"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      },
                      "required": ["storage_type", "configuration"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "StoreUpdate": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["store"]
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "checksum": {
                              "type": "string"
                            },
                            "size": {
                              "type": "integer"
                            },
                            "tags": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["type", "id"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "FileStoreAssignment": {
        "required": true,
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["file-store-assignment"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "store_id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "ID of existing store to assign"
                        },
                        "create_store": {
                          "type": "object",
                          "description": "Create new store for this file",
                          "properties": {
                            "storage_type": {
                              "type": "string",
                              "enum": ["filestore", "s3store", "gcsstore", "azurestore"]
                            },
                            "configuration": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      }
    },
    "responses": {
      "ExecutionResult": {
        "description": "Code execution successful",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["execution-result"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "Execution result value"
                        },
                        "output": {
                          "type": "string",
                          "description": "Standard output"
                        },
                        "status": {
                          "type": "string",
                          "enum": ["success", "error"]
                        },
                        "execution_time": {
                          "type": "integer",
                          "description": "Execution time in milliseconds"
                        },
                        "context_id": {
                          "type": "string",
                          "description": "Execution context used"
                        }
                      },
                      "required": ["result", "status", "execution_time"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "ExecutionError": {
        "description": "Code execution failed",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": ["400"]
                      },
                      "title": {
                        "type": "string",
                        "enum": ["Execution Error"]
                      },
                      "detail": {
                        "type": "string",
                        "description": "Error details and stack trace"
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "line": {
                            "type": "integer"
                          },
                          "column": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "required": ["status", "title", "detail"]
                  }
                }
              },
              "required": ["errors"]
            }
          }
        }
      },
      "ExecutionTimeout": {
        "description": "Code execution timed out",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": ["408"]
                      },
                      "title": {
                        "type": "string",
                        "enum": ["Execution Timeout"]
                      },
                      "detail": {
                        "type": "string"
                      }
                    },
                    "required": ["status", "title", "detail"]
                  }
                }
              },
              "required": ["errors"]
            }
          }
        }
      },
      "ExecutionContext": {
        "description": "Execution context details",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["execution-context"]
                    },
                    "id": {
                      "type": "string"
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": ["active", "idle", "terminated"]
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "last_execution": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        }
                      },
                      "required": ["name", "status", "created_at"]
                    }
                  },
                  "required": ["type", "id", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "ExecutionContextList": {
        "description": "List of execution contexts",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExecutionContext"
                  }
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "GitStatus": {
        "description": "Git repository status",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["git-status"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "branch": {
                          "type": "string"
                        },
                        "is_clean": {
                          "type": "boolean"
                        },
                        "ahead": {
                          "type": "integer"
                        },
                        "behind": {
                          "type": "integer"
                        },
                        "modified_files": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "untracked_files": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": ["branch", "is_clean", "ahead", "behind"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "GitSyncResult": {
        "description": "Git sync operation result",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["git-sync-result"]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "operation": {
                          "type": "string",
                          "enum": ["pull", "push", "fetch"]
                        },
                        "status": {
                          "type": "string",
                          "enum": ["success", "conflict", "error"]
                        },
                        "message": {
                          "type": "string"
                        },
                        "commits_ahead": {
                          "type": "integer"
                        },
                        "commits_behind": {
                          "type": "integer"
                        }
                      },
                      "required": ["operation", "status", "message"]
                    }
                  },
                  "required": ["type", "attributes"]
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "GitConflict": {
        "description": "Git merge conflict",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": ["409"]
                      },
                      "title": {
                        "type": "string",
                        "enum": ["Git Conflict"]
                      },
                      "detail": {
                        "type": "string"
                      },
                      "meta": {
                        "type": "object",
                        "properties": {
                          "conflicted_files": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "required": ["status", "title", "detail"]
                  }
                }
              },
              "required": ["errors"]
            }
          }
        }
      },
      "Workspace": {
        "description": "Workspace details",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/Workspace"
            }
          }
        }
      },
      "WorkspaceList": {
        "description": "List of workspaces",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Workspace"
                  }
                }
              },
              "required": ["data"]
            }
          }
        }
      },
      "WorkspaceCreated": {
        "description": "Workspace created successfully",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/Workspace"
            }
          }
        }
      },
      "File": {
        "description": "File details",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/File"
            }
          }
        }
      },
      "Team": {
        "description": "Team details",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/Team"
            }
          }
        }
      },
      "TeamList": {
        "description": "List of teams",
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              },
              "required": ["data"]
            }
          }
        }
      }
    },
    "schemas": {
      "Workspace": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["workspace"]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"