import Config
config :ash, policies: [show_policy_breakdowns?: true]


# Configure your database
config :kyozo, Kyozo.Repo,
  username: "postgres",
  password: "postgres",
  hostname: "localhost",
  database: "kyozo_dev",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :kyozo, KyozoWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: 4000],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "FFBjCsV3sinGFlIttNMrZz6kOLV+F3+bLivlA9JhJN8wOhlgq5+0vzts+kO5MqXw",
  watchers: [
    # node: ["build.js", "--watch", cd: Path.expand("../assets", __DIR__)],
    pnpm: [
      "vite",
      "serve",
      "--mode",
      "development",
      "--config",
      "vite.config.mts",
      cd: Path.expand("../assets", __DIR__)
    ]
    #     "dev": "vite --config vite.config.mts"
    # esbuild: {Esbuild, :install_and_run, [:kyozo, ~w(--sourcemap=inline --watch)]},
    # tailwind: {Tailwind, :install_and_run, [:kyozo, ~w(--watch)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :kyozo, KyozoWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/(?!uploads/).*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/kyozo_web/(controllers|live|components)/.*(ex|heex)$"
    ]
  ]

config :kyozo, Kyozo.Mailer,
   adapter: Swoosh.Adapters.SMTP,
   relay: System.get_env("MAILTRAP_SERVER", "smtp.mailtrap.io"),
   username: System.get_env("MAILTRAP_USERNAME", "YOUR USERNAME"),
   password: System.get_env("MAILTRAP_PASSWORD", "YOUR PASSWORD"),
   ssl: false,
   tls: :never,
   auth: :always,
   port: System.get_env("MAILTRAP_PORT", "2525"),
   retries: System.get_env("MAILTRAP_RETRIES", "2"),
   no_mx_lookups: System.get_env("MAILTRAP_NO_MX_LOOKUPS", "false")

# Enable dev routes for dashboard and mailbox
config :kyozo, dev_routes: true, token_signing_secret: "HGcuS+aLVn83xvSiCblt3LCx11VPsWVA"

# Do not include metadata nor timestamps in development logs
config :logger, :default_formatter, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :phoenix_live_view,
  # Include HEEx debug annotations as HTML comments in rendered markup
  debug_heex_annotations: true,
  # Enable helpful, but potentially expensive runtime checks
  enable_expensive_runtime_checks: true

# Disable swoosh api client as it is only required for production adapters.
config :swoosh, :api_client, false

config :kyozo, Kyozo.Mailer,
  adapter: Swoosh.Adapters.Local

config :ash_authentication, debug_authentication_failures?: true
config :ash_authentication, :bypass_require_interaction_for_confirmation?, true


config :ash, :pub_sub, debug?: true

# OAuth2 Configuration for Development
config :kyozo,
  apple_client_id: System.get_env("APPLE_CLIENT_ID"),
  apple_client_secret: System.get_env("APPLE_CLIENT_SECRET"),
  apple_team_id: System.get_env("APPLE_TEAM_ID"),
  apple_private_key_id: System.get_env("APPLE_PRIVATE_KEY_ID"),
  apple_private_key_path: System.get_env("APPLE_PRIVATE_KEY_PATH"),
  apple_redirect_uri: "http://localhost:4000/auth/apple/callback"


# S3 development configuration
config :kyozo, :s3_storage,
  bucket: System.get_env("S3_BUCKET", "kyozo-dev-storage"),
  region: System.get_env("AWS_REGION", "us-east-1")

# Use disk storage by default in development, set BLOB_STORAGE_BACKEND=s3 to test S3
config :kyozo,
  blob_storage_backend: (case System.get_env("BLOB_STORAGE_BACKEND") do
    "s3" -> :s3
    _ -> :disk
  end)

# LiveSvelte configuration for Vite integration
config :live_svelte,
  vite_host: "http://localhost:5173"
